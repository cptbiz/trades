// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
console.log('üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã websocket_data...');

const { Pool } = require('pg');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: {
        rejectUnauthorized: false
    }
});

async function checkTableStructure() {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã websocket_data...');
        
        const result = await pool.query(`
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'websocket_data' 
            ORDER BY ordinal_position
        `);
        
        console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã websocket_data:');
        result.rows.forEach(row => {
            console.log(`  - ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
        });
        
        const hasSymbolColumn = result.rows.some(row => row.column_name === 'symbol');
        const hasPairSymbolColumn = result.rows.some(row => row.column_name === 'pair_symbol');
        
        console.log(`\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:`);
        console.log(`  - –ö–æ–ª–æ–Ω–∫–∞ 'symbol': ${hasSymbolColumn ? '–ï–°–¢–¨' : '–ù–ï–¢'}`);
        console.log(`  - –ö–æ–ª–æ–Ω–∫–∞ 'pair_symbol': ${hasPairSymbolColumn ? '–ï–°–¢–¨' : '–ù–ï–¢'}`);
        
        if (hasPairSymbolColumn && !hasSymbolColumn) {
            console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É symbol...');
            await pool.query(`
                ALTER TABLE websocket_data ADD COLUMN symbol VARCHAR(20)
            `);
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ symbol –¥–æ–±–∞–≤–ª–µ–Ω–∞');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

checkTableStructure(); 